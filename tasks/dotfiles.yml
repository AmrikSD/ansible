- name: Install stow
  apt: name=stow
  become: true

- name: Check if dotfiles needs cloning
  stat:
    path: "{{ lookup('env','HOME') }}/.dotfiles"
  register: dotfiles

- name: Cloning .dotfiles
  git:
    repo: 'https://github.com/AmrikSD/.dotfiles.git'
    dest: "{{ lookup('env', 'HOME') }}/.dotfiles"
    recursive: yes
    update: yes
    accept_hostkey: yes
    version: main
  when: not (dotfiles.stat.isdir is defined and dotfiles.stat.isdir)

- name: Get sha1sum of id_rsa
  stat:
    path: "{{ lookup('env', 'HOME') }}/.dotfiles/ssh/.ssh/id_rsa"
    checksum_algorithm: sha1
    get_checksum: yes
  register: sha

- name: decrypt ssh key
  command: ansible-vault decrypt "{{ lookup('env','HOME') }}/.dotfiles/ssh/.ssh/id_rsa" --vault-password-file "{{ vault_password_file }}"
  register: ansible_vault_output
  when: sha.stat.checksum == "186ca4133ef4a4935cc04e85bcb273283844b41d"
  changed_when: true
  vars:
    vault_password_file: ./vaultpass

- name: add SSH remote and set as default
  git_config:
    repo: "{{ lookup('env', 'HOME') }}/.dotfiles"
    name: remote.origin.url
    value: git@github.com:AmrikSD/.dotfiles.git
    scope: local
  changed_when: true

- name: Exclude SSH key file from Git tracking
  command: git update-index --skip-worktree "ssh/.ssh/id_rsa"
  args:
    chdir: "{{ lookup('env', 'HOME') }}/.dotfiles"
    warn: false
  changed_when: true

- name: "make sure {{ item }} is empty"
  file:
    path: "{{ lookup('env', 'HOME') }}/{{ item }}"
    state: absent
  with_items:
    - ".ssh"
    - ".zshrc"
    - ".config"

- name: Stow directories
  command: stow "{{ item }}"
  args:
    chdir: "{{ lookup('env', 'HOME') }}/.dotfiles"
  register: stow_output
  changed_when: stow_output.rc == 0
  with_items:
    - ssh
    - zsh
    - nvim
